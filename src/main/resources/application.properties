# Base de datos SQL
spring.datasource.url=jdbc:mysql://localhost:3308/db_persona
spring.datasource.username=root
spring.datasource.password=

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
# puerto de ejecución
server.port=9000

# Configuracion de la base de datos H2
#Habilitar la consola de H2
#spring.h2.console.enabled=true
#Par?metros para conectarnos a una base d edatos
#spring.datasource.url=jdbc:h2:mem:./betodb;
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=

# Configuraci?n de JPA
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# EL update le dice que si no existe n las tablas que las cree y luego actualice
#spring.jpa.hibernate.ddl-auto=update
#Muestra pr la consola como se desarrollan las consultas SQL
#spring.jpa.show-sql = true

# puerto de ejecuci?n, donde escucha el server embebido
#server.port=8080

# OPEN API
# http://localhost:8080/swagger-ui/index.html  ASI HAY QUE LLAMARLO
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# LEVANTAR H2
# http://localhost:8080/h2-console/
